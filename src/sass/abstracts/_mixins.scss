@mixin breakpoint($breakpoint, $direction) {
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    @if $direction == max {
      @media (max-width: ($breakpoint-value - 1)) {
        @content;
      }
    } @else if $direction == min {
      @media (min-width: $breakpoint-value) {
        @content;
      }
    } @else {
      @media ($direction: $breakpoint-value) {
        @content;
      }
    }
  } @else {
    @if $direction == max {
      @media (max-width: $breakpoint) {
        @content;
      }
    } @else if $direction == min {
      @media (min-width: $breakpoint) {
        @content;
      }
    } @else {
      @media ($direction: $breakpoint) {
        @content;
      }
    }
  }
}

@mixin typography(
  $weight: fnTextWeight(regular),
  $size: fnTextSize(norm),
  $height: fnTextLineHeight(babig)
) {
  font-weight: $weight;
  font-size: $size;
  line-height: $height;
  font-style: normal;
}

@mixin theme($theme) {
  background-color: fnTheme($theme);
  color: fnTheme($theme);
}

@mixin photo($photo) {
  background-image: url($photo);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin flex($type: flex) {
  display: $type;
  align-items: center;
  justify-content: center;
}

@mixin transition($props...) {
  $result: ();
  @each $prop in $props {
    $result: append(
      $result,
      ($prop 250ms cubic-bezier(0.4, 0, 0.2, 1)),
      $separator: comma
    );
  }
  transition: $result;
}

@mixin hiden($value: false) {
  @if $value == hiden {
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
  } @else if $value == appear {
    opacity: 1;
    visibility: visible;
    pointer-events: initial;
  }
}

@mixin button-theme($color, $color-text-hover: $color-light) {
  color: $color;
  border-color: $color;
  background-color: transparent;

  &:hover,
  &:focus {
    color: $color-text-hover;
    background-color: $color;
  }
}
