@mixin position(
  $position: absolute,
  $top: null,
  $right: null,
  $bottom: null,
  $left: null,
  $z-index: initial
) {
  position: $position;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  z-index: $z-index;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin block-center {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-center-column {
  @include flex-center;
  flex-direction: column;
}

@mixin typography(
  $weight: fnTextWeight(regular),
  $size: fnTextSize(norm),
  $height: fnTextLineHeight(babig)
) {
  font-weight: $weight;
  font-size: $size;
  line-height: $height;
  font-style: normal;
}

@mixin mq($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  } @else {
    @warn 'Invalid breakpoint: #{$width}.';
  }
}

@mixin theme($theme) {
  @if $theme == light {
    color: fnColor(text-black);
    background-color: fnColor(bg-body);
  } @else if $theme == dark {
    color: fnColor(bg-body);
    background-color: fnColor(text-black);
  }
}

@mixin photo($photo) {
  background-image: url($photo);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

@mixin transition($props...) {
  $result: ();
  @each $prop in $props {
    $result: append(
      $result,
      ($prop 250ms cubic-bezier(0.4, 0, 0.2, 1)),
      $separator: comma
    );
  }
  transition: $result;
}

@mixin hiden($value: false) {
  @if $value == hiden {
    opacity: 0;
    visibility: hidden;
    pointer-events: none;
  } @else if $value == appear {
    opacity: 1;
    visibility: visible;
    pointer-events: initial;
  }
}

@mixin button-theme($color, $color-text-hover: $color-light) {
  color: $color;
  border-color: $color;
  background-color: transparent;

  &:hover,
  &:focus {
    color: $color-text-hover;
    background-color: $color;
  }
}

@mixin placeholder {
  &.placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
}
